<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[odoo8+ubuntu14.04部署]]></title>
    <url>%2F2017%2F10%2F16%2Fodoo8-ubuntu14-04%E9%83%A8%E7%BD%B2%2F</url>
    <content type="text"><![CDATA[ubuntu环境 ###- 安装git ###- 代码托管网站ssh秘钥添加 ###- 相关python包安装 - step1:更新软件列表 sudo apt-get update - step2:更新软件 sudo apt-get upgrade - step3:安装一些odoo8要用的python依赖库 1234567 sudo apt-get install python-dateutil python-docutils python-feedparser python-jinja2 python-ldap python-libxslt1 python-lxml python-mako python-mock python-openid python-psycopg2 python-psutil python-pybabel python-pychart python-pydot python-pyparsing python-reportlab python-simplejson python-tz python-unittest2 python-vatnumber python-vobject python-webdav python-werkzeug python-xlwt python-yaml python-zsi poppler-utils python-pip python-pyPdf python-passlib python-decorator - step4:安装一些odoo8要用的包 mac安装psycopg2出错时：需要先安装postgresql再安装 一般情况下，缺几种库：pbkdf2, spyne,xlrd,xlsxwriter 运行后，如果，提示 no model named pbkdf2等，则安装相应的库即可， 有三种安装方式 1、easy_install pbkdf2 2、ape-get install pbkdf2 3、pip install pbkdf2 12345 sudo apt-get install gcc python-dev mc bzr python-setuptools python-babel python-feedparser python-reportlab-accel python-zsi python-openssl python-egenix-mxdatetime python-jinja2 python-unittest2 python-mock python-docutils lptools make python-psutil python-paramiko poppler-utils python-pdftools antiword - step5:安装postgresql和git 123 sudo apt-get install python-software-propertiessudo apt-get updatesudo apt-get install postgresql-9.3 - step6:创建odoo用户以及数据库用户 1234 sudo su postgrespostgres@openerp-desktop:/$ createuser -s openerppostgres@openerp-desktop:/$ createuser -s system_namepostgres@openerp-desktop:/$ exit 用psql -l命令查看数据库列表 用psql template1,命令进入数据库 step7:创建odoo用户和组 假如已经创建了openerp用户,则跳过此步骤 sudo adduser –system –home=/opt/openerp –group openerp 如果安装提示 1 error: [Errno 13] Permission denied: &apos;/usr/local/bin/sort_wsdl&apos; 则给相应文件夹赋权限即可，命令： 1 sudo chmod 777 -R /usr/local/bin/sort_wsdl 服务启动后，创建数据库，出现错误：permission denied to create database时，应该是openerp用户的权限受限引起的， 进入数据库template1使用\du查看用户及其属性，可以发现openerp一行对应的Attributes为空 1 postgres@whf:/$ psql template1 输入以下命令，以及创建数据库openerp用户时输入两次相同的自定义密码 1234 postgres@whf:/$ dropuser openerppostgres@whf:/$ createuser --createdb --username postgres --createrole --pwprompt openerpEnter password for new role:Enter it again: 之后再次进入数据库template1,查看用户以及属性 ###问题 其他情况： No PostgreSQL clusters exist; see “man pg_createcluster” 123 sudo ln -s /tmp/.s.PGSQL.5432 /var/run/postgresql/.s.PGSQL.5432sudo service postgresql stop --forcesudo service postgresql start —force 出现语言，字体提示时，直接安装字体 sudo locale-gen enUS.UTF-8或 export LC_ALL=en_US.UTF-8 安装中文字体, wkhtmltopdf, sass安装 1.进入/usr/share/fonts/新建文件夹，用于存放字体 ➜ /cd /usr/share/fonts ➜ fonts sudo mkdir -p gb2312Fonts [sudo] password for openerp: ➜ fonts ls cmap gb2312Fonts truetype type1 X11 2然后将字体文件拷贝到此文件夹下 ➜ fonts cd gb2312Fonts ➜ gb2312Fonts sudo cp /home/openerp/楷体_GB2312.ttf . ➜ gb2312Fonts ls 楷体_GB2312.ttf 3.修改权限 ➜ gb2312Fonts sudo chmod 777 楷体_GB2312.ttf 4开始安装： cd /usr/share/fonts/gb2312Fonts/ sudo mkfontscale （创建GB2312字体的fonts.scale文件，它用来控制字体旋转缩放） sudo mkfontdir （创建GB2312字体的fonts.dir文件，它用来控制字体粗斜体产生） sudo fc-cache -fv （建立字体缓存信息，也就是让系统认识认识GB2312） wkhtmltopdf 当出现Cannot connect to X server时，使用下面安装： 链接： http://stackoverflow.com/questions/9604625/wkhtmltopdf-cannot-connect-to-x-server 1234 sudo apt-get install xfonts-75dpiwget http://download.gna.org/wkhtmltopdf/0.12/0.12.2/wkhtmltox-0.12.2_linux-trusty-amd64.debsudo dpkg -i wkhtmltox-0.12.2_linux-trusty-amd64.debwkhtmltopdf http://www.google.com test.pdf mac系统下载显示比例不对时 https://github.com/wkhtmltopdf/wkhtmltopdf/releases/0.12.3/下载 安装好之后，需要将两个文件复制到odoo运行环境的bin目录中，pdf打印的显示比例不对，可以按照下面的方式解决 12 scp /usr/local/bin/wkhtmltopdf /Users/whf/.virtualenvs/odoo/binscp /usr/local/bin/wkhtmltoimage /Users/whf/.virtualenvs/odoo/bin sass安装 淘宝RubyGems镜像安装 sass 由于国内网络原因（你懂的），导致 rubygems.org 存放在 Amazon S3 上面的资源文件间歇性连接失败。这时候我们可以通过gem sources命令来配置源，先移除默认的 https://rubygems.org源，然后添加淘宝的源https://ruby.taobao.org/，然后查看下当前使用的源是哪个，如果是淘宝的，则表示可以输入sass安装命令gem install sass了，关于常用gem source命令可参看：常用的gem source 1234567891011 $ gem sources --remove https://rubygems.org/$ gem sources -a https://ruby.taobao.org/$ gem sources -l*** CURRENT SOURCES ***https://ruby.taobao.org# 请确保只有 ruby.taobao.org$ gem install sassgit clone git://github.com/nex3/sass.gitcd sassrake install]]></content>
  </entry>
  <entry>
    <title><![CDATA[hexo + github 搭建个人博客]]></title>
    <url>%2F2017%2F07%2F26%2Fhexo-github%2F</url>
    <content type="text"><![CDATA[github准备 注册github 创建github仓库 仓库名称为： Github昵称.github.io 添加秘钥 环境准备 安装git,以及node 全局安装hexo: npm install -g hexo-cli hexo官网 初始化博客 建立一个博客文件夹，并初始化博客， 为文件夹的名称 1 $ hexo init &lt;folder&gt; 进入博客文件夹， 为文件夹的名称 1 cd &lt;folder&gt; 根据博客既定的dependencies配置安装所有的依赖包 1 $ npm install 配置博客 修改_config.yml文件 修改网站相关信息 123456 title: inerdstacksubtitle: the stack of it nerdsdescription: start from zeroauthor: inerdstacklanguage: zh-CNtimezone: Asia/Shanghai 注意：每一项的填写，其:后面都要保留一个空格，下同。language和timezone都是有输入规范的，详细可参考语言规范和时区规范。 配置统一资源定位符（个人域名） url: http://xixili.online 对于root（根目录）、permalink（永久链接）、permalink_defaults（默认永久链接）等其他信息保持默认。 配置部署 1234 deploy: type: git repo: https://github.com/iNerdStack/inerdstack.github.io.git branch: master 此处的repo为github上的仓库地址，使用HTTPS时，需要每次更新都输入用户名以及密码，所以此处使用SSH的URL, 如图： 编写文章 新建文章： hexo n “文章标题” 完整命令 hexo new 本地博客文件夹source-&gt;_post文件夹下看到我们新建的markdown文件，就可以用md格式编写你的博客了 同样也可以直接在source-&gt;_deploy文件夹下手动添加md文件 本地发布： hexo s 完整命令 hexo server ,如图： 生成静态页面： hexo g 完整命令： hexo generate ,生成静态页面至public目录 部署至github: hexo d 完整命令：hexo deploy ，即部署到_config.yml中配置的github. 部署之前应git init 在部署HEXO出现ERROR Deployer not found : .git时 执行 npm install hexo-deployer-git –save 之后即可顺利部署 绑定域名 购买域名， 阿里云为例 域名解析，在 阿里云控制台的的域名列表中 点击添加解析按钮，如图一次输入：CNAME、@、Github博客域名。选择保存完成个人域名向个人博客的映射。 添加解析后，在浏览器输入我们新注册的域名： 网站报出了404错误，这说明我们的域名已经成功映射到了Github网站 个人博客向个人域名的映射 在source目录下新建一个CNAME文件，文件内容为个人域名，例如我的为xixili.online(注意：没有http: //，没有 www)， 然后重新生成部署，在浏览器端重新输入我们的域名，就可以发现成功了 其他 界面添加图片 把主页配置文件_config.yml 里的post_asset_folder 设置为true hexo目录下执行: npm install hexo-asset-image –save 这是下载安装一个可以上传本地图片的插件，来自dalao：dalao的git 运行hexo n “文章标题”来生成md博文时，/source/_posts文件夹内除了xxxx.md文件还有一个同名的文件夹, 用于存放图片 在xxxx.md中想引入图片时，先把图片复制到xxxx这个文件夹中，然后只需要在xxxx.md中按照markdown的格式引入图片： !【你想输入的替代文字】(xxxx/图片名.jpg) 最后检查一下，hexo g生成页面后，进入public\2017\02\26\index.html文件中查看相关字段，可以发现， html标签内的语句是&lt; mg src=”2017/02/26/xxxx/图片名.jpg”&gt;，而不是&lt;img src=”xxxx/图片名.jpg&gt;。]]></content>
      <tags>
        <tag>标签1</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2017%2F07%2F25%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick Start Create a new post 1 $ hexo new "My New Post" More info: Writing Run server 1 $ hexo server More info: Server Generate static files 1 $ hexo generate More info: Generating Deploy to remote sites 1 $ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
